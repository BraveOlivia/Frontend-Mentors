{"version":3,"sources":["components/input/SectionTitle.jsx","components/input/UserInput.jsx","components/input/Button.jsx","components/input/TipSelection.jsx","components/output/ResultTitle.jsx","components/output/ResultBar.jsx","components/output/ResultCard.jsx","components/App.jsx","index.js"],"names":["SectionTitle","props","className","title","invalid","UserInput","useState","invalidInput","setInvalid","name","type","onChange","event","target","value","onAdd","placeholder","Button","id","onClick","onSelected","style","backgroundColor","active","color","TipSelection","activeBtn","setActiveBtn","customTip","setCustomTip","handleTip","tip","handleActive","console","log","ResultTitle","ResultBar","tipAmount","total","onReset","App","bill","setBill","setTip","people","setPeople","toFixed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec4b235b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SectionTitle.css\";\n\nconst SectionTitle = (props) => {\n  return (\n    <h5 className=\"section-title\">\n      {props.title}\n      {props.invalid && <span className=\"invalid-alert\">Can't be zero</span>}\n    </h5>\n  );\n};\n\nexport default SectionTitle;\n","import React, { useState } from \"react\";\nimport SectionTitle from \"./SectionTitle\";\n\nimport \"./UserInput.css\";\n\nconst UserInput = (props) => {\n  const [invalidInput, setInvalid] = useState(false);\n\n  function inputHandler(event) {\n    const { name, value } = event.target;\n    props.onAdd(value); // Can't use {inputValue} here\n\n    if (name === \"Number of People\" && value === \"0\") {\n      setInvalid(true);\n    } else {\n      setInvalid(false);\n    }\n  }\n\n  return (\n    <div>\n      <SectionTitle title={props.title} invalid={invalidInput} />\n\n      <div className=\"input-box\">\n        <input\n          name={props.title}\n          type=\"number\"\n          onChange={inputHandler}\n          value={props.value}\n          placeholder=\"0\"\n        />\n        <span className=\"unit\">{props.title === \"Bill\" ? \"$\" : \"p\"}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default UserInput;\n","import React from \"react\";\nimport \"./Button.css\";\n\n// Handle the status of button, if clicked, change the color\nconst Button = (props) => {\n  function handleClick(event) {\n    const { value } = event.target;\n    props.onSelected(value);\n  }\n\n  return (\n    <button\n      name={props.id}\n      value={props.value}\n      onClick={handleClick}\n      className=\"btn\"\n      style={{\n        backgroundColor: props.active && \"hsl(172, 67%, 45%)\",\n        color: props.active && \"hsl(183, 100%, 15%)\",\n      }}\n    >\n      {props.value}%\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport SectionTitle from \"./SectionTitle\";\nimport Button from \"./Button\";\n\nconst TipSelection = (props) => {\n  const [activeBtn, setActiveBtn] = useState(0);\n  const [customTip, setCustomTip] = useState(\"\");\n\n  function handleTip(tip) {\n    props.onSelected(tip);\n  }\n\n  function handleActive(event) {\n    const { name, value } = event.target;\n    // if (name !== \"6\") {\n      setActiveBtn(name);\n    // }\n    console.log(name, value);\n  }\n\n  function handleCustomTip(event) {\n    const { value } = event.target;\n    props.onSelected(value);\n    setCustomTip(value);\n  }\n\n  return (\n    <div>\n      <SectionTitle title=\"Select Tip %\" />\n      {/* {props.selected === \"\" ? setActiveBtn(7) : null} */}\n      <div onClick={handleActive}>\n        <Button\n          id=\"1\"\n          value=\"5\"\n          onSelected={handleTip}\n          active={activeBtn === \"1\" ? true : false}\n        />\n      </div>\n      <div onClick={handleActive}>\n        <Button\n          id=\"2\"\n          value=\"10\"\n          onSelected={handleTip}\n          active={activeBtn === \"2\" ? true : false}\n        />\n      </div>\n      <div onClick={handleActive}>\n        <Button\n          id=\"3\"\n          value=\"15\"\n          onSelected={handleTip}\n          active={activeBtn === \"3\" ? true : false}\n        />\n      </div>\n      <div onClick={handleActive}>\n        <Button\n          id=\"4\"\n          value=\"25\"\n          onSelected={handleTip}\n          active={activeBtn === \"4\" ? true : false}\n        />\n      </div>\n      <div onClick={handleActive}>\n        <Button\n          id=\"5\"\n          value=\"50\"\n          onSelected={handleTip}\n          active={activeBtn === \"5\" ? true : false}\n        />\n      </div>\n      <div onClick={handleActive}>\n        <input\n          className=\"input-btn\"\n          placeholder=\"Custom\"\n          type=\"number\"\n          onChange={handleCustomTip}\n          onSelected={handleTip}\n          value={customTip}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default TipSelection;\n","import React from \"react\";\nimport \"./ResultTitle.css\";\n\nconst ResultTitle = (props) => {\n  return (\n    <div>\n      <h5 className=\"result-title\">{props.title}</h5>\n      <p className=\"description\">/ person</p>\n    </div>\n  );\n};\n\nexport default ResultTitle;\n","import React from \"react\";\nimport ResultTitle from \"./ResultTitle\";\n\nconst ResultBar = (props) => {\n  return (\n    <div className=\"card_row\">\n      <div className=\"card_column\">\n        <ResultTitle title={props.title} />\n      </div>\n      <div className=\"card_column tip-figure\">\n        <h2>${props.tip}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default ResultBar;\n","import React from \"react\";\nimport ResultCard from \"./ResultBar\";\nimport \"./ResultCard.css\";\n\nconst SectionTitle = (props) => {\n  function resetHandler() {\n    props.onReset();\n  }\n\n  return (\n    <div className=\"center\">\n      <ResultCard title=\"Tip Amount\" tip={props.tipAmount} />\n      <ResultCard title=\"Total\" tip={props.total} />\n      <button className=\"reset-btn\" onClick={resetHandler}>\n        RESET\n      </button>\n    </div>\n  );\n};\n\nexport default SectionTitle;\n","import React, { useState } from \"react\";\nimport UserInput from \"./input/UserInput\";\nimport TipSelection from \"./input/TipSelection\";\nimport ResultCard from \"./output/ResultCard\";\nimport \"./App.css\";\n\nfunction App() {\n  const [bill, setBill] = useState(\"\");\n  const [tip, setTip] = useState(\"\");\n  const [people, setPeople] = useState(\"\");\n\n  function handleBill(bill) {\n    setBill(bill);\n  }\n\n  function handleTip(tip) {\n    setTip(tip);\n  }\n\n  function handlePeople(people) {\n    setPeople(people);\n  }\n\n  function resetHandler() {\n    setBill(\"\");\n    setTip(0);\n    setPeople(\"\");\n  }\n\n  return (\n    <div>\n      <header>\n        <span className=\"logo\">SPLI</span>\n        <br />\n        <span className=\"logo\">TTER</span>\n      </header>\n      <div className=\"card row card-content\">\n        <div className=\"column\">\n          <UserInput onAdd={handleBill} title=\"Bill\" value={bill} />\n\n          {/* render a new tip selection to reset the status */}\n          {tip === 0 && <TipSelection onSelected={handleTip} />}\n          {tip !== 0 && <TipSelection onSelected={handleTip} />}\n          <UserInput\n            onAdd={handlePeople}\n            title=\"Number of People\"\n            value={people}\n          />\n        </div>\n        <div className=\"column right-column\">\n          <ResultCard\n          //fix the infinity and NaN issue\n          //just change the logic a little bit. \n          //You should check the existence of bill, tip and people, and only get output when all of them exist\n            tipAmount={(bill && tip) ? ((bill * tip) / 100).toFixed(2) : \"0.00\"}\n            total={\n              (bill && tip && people)\n                ? ((bill * (1 + tip / 100)) / people).toFixed(2)\n                : \"0.00\"\n            }\n            onReset={resetHandler}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n// import App from \"./components/App2\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}